resources:
- name: {{ properties["name"] }}
  type: gcp-types/container-v1beta1:projects.locations.clusters
  properties:
    parent: projects/{{ env["project"] }}/locations/{{ properties["location"] }}
    cluster:
      name: {{ properties["name"] }}      
      network: {{ properties["network"] }}
      subnetwork: {{ properties["subnetwork"] }}
      initialClusterVersion: {{ properties["version"] }}
      {% if properties["vpc-native"] %}
      ipAllocationPolicy:
        useIpAliases: true
        {% if properties["pod-cidr"] %}
        createSubnetworks: false
        clusterSecondaryRangeName: {{ properties["pod-cidr"] }}
        servicesSecondaryRangeName: {{ properties["service-cidr"] }}
        {% else %}
        createSubnetworks: true
        {% endif %}
      {% endif %}
      {% if properties["networkPolicy"] %}
      networkPolicy:
        provider: CALICO
        enabled: true
      {% endif %}
      {% if properties["private-cluster"] %}
      masterAuthorizedNetworksConfig:
        enabled: true
        cidrBlocks:
        {% if properties["hosts"] %}
        {% for host in properties["hosts"] %}
        - displayName: {{ properties.hosts["host-name"] }}
          cidrBlock: {{ properties.hosts["host-cidr"] }}
        {% endfor %}
        {% endif %}
      privateClusterConfig:
        enablePrivateNodes: true
        masterIpv4CidrBlock: {{ properties["master-cidr"] }}
      {% endif %}
      nodePools:
      {% for pool in properties["nodePools"] %}
      - source: $(ref.{{ properties.nodePools["name"] }}.selfLink)
      {% endfor %}
      ##Configure how to auth against master endpoint. Disable both will rely on IAM
      masterAuth:
        clientCertificateConfig:
          issueClientCertificate: false
        username: ""
      ##New Beta logging and monitoring
      {% if properties["logging"] %}
      loggingService: logging.googleapis.com/kubernetes
      monitoringService: monitoring.googleapis.com/kubernetes
      {% endif %}
      {% if properties["locations"] %}
      {% for zone in properties["locations"] %}
      - {{ zone }}
      {% endfor %}
      {% endif %}
      addonsConfig:
        kubernetesDashboard:
          disabled: true
        {% if properties["httpLB"] %}
        httpLoadBalancing:
          disabled: true
        {% else %}
        httpLoadBalancing:
          disabled: false
        {% endif %}
        {% if properties["networkPolicy"] %}
        networkPolicyConfig:
          disabled: false
        {% endif %}
{% for pool in properties["nodePools"] %}
- name: {{ properties.nodePools["name"] }}
  type: container.v1.nodePool
  properties: 
    name: {{ properties.nodePools["name"] }}
    config:
      initialNodeCount: {{ properties.nodePools["initialNodeCount"] }}
      {% if properties.nodePools["autoscale"] %}
      autoscaling:
        enabled: true
        minNodeCount: {{ properties.nodePools["minNodeCount"] }}
        maxNodeCount: {{ properties.nodePools["maxNodeCount"] }}
      {% else %}
      autoscaling:
        enabled: false
      {% endif %}
      management:
      {% if properties.nodePools["image"]=="cos" %}
        autoUpgrade: true
        autoRepair: true
      {% else %}
        autoUpgrade: false
        autoRepair: false
      {% endif %}
      config:
        imageType: {{ properties.nodePools["image"] }}
        machineType: {{ properties.nodePools["machineType"] }}
        diskSizeGb: 100
        preemptible: false
        oauthScopes:
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring
        - https://www.googleapis.com/auth/servicecontrol
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/source.read_only
        - https://www.googleapis.com/auth/trace.append
{% endfor %}
